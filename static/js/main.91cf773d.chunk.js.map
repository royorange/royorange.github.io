{"version":3,"sources":["utils/getWeb3.js","components/helper/Web3WalletHelper.js","providers/Web3.js","components/helper/BscRPCHelper.js","providers/NationContract.js","providers/AccountProvider.js","providers/MetadataProvider.js","1.gif","components/Card.js","components/List/List.js","views/profile.js","components/Filter/Filter.js","views/showroom.js","App.js","reportWebVitals.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Web3WalletHelper","Web3Context","React","createContext","undefined","Web3Provider","children","useState","setweb3","useEffect","then","Provider","value","useWeb3","useContext","BSCMainNetRPCHelper","NationContractContext","NationContractProvider","instance","setinstance","isBsc","setisBsc","eth","net","getId","networkId","deployedNetwork","NationContract","networks","Contract","abi","address","createInstance","AccountContext","AccountProvider","account","setaccount","getAccounts","accounts","length","initAccount","MetadataContext","MetadataProvider","md","setmd","fetch","response","json","data","useMetadata","SPECIAL_ATTRIBUTE","Card","item","isSpecial","useMemo","attributes","some","attr","isSpecialCard","className","src","image","alt","name","description","special","List","allItems","pageSize","items","setitems","hasMore","sethasMore","slice","dataLength","next","append","i","push","loader","endMessage","style","textAlign","map","index","Profile","nationContract","ownedItems","setownedItems","methods","balanceOf","call","count","idx","all","tokenOfOwnerByIndex","tokenIds","tokenId","fetchOwned","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","width","getStyles","attrName","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","AttributeGroupFilter","groupName","onChange","useTheme","setattrName","FormControl","sx","m","InputLabel","id","Select","labelId","multiple","event","target","attrs","split","group","input","OutlinedInput","label","renderValue","selected","Box","display","flexWrap","gap","Chip","MenuItem","rarity","toFixed","ShowRoom","collection","filters","setfilters","forEach","attrsMap","attrGroups","Object","keys","filter","key","onFilterChange","useCallback","attributeMatched","sort","b","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91cf773d.chunk.js","sourcesContent":["import Web3 from \"web3\";\n\nconst getWeb3 = () =>\n  new Promise((resolve, reject) => {\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\n    window.addEventListener(\"load\", async () => {\n      // Modern dapp browsers...\n      if (window.ethereum) {\n        const web3 = new Web3(window.ethereum);\n        try {\n          // Request account access if needed\n          await window.ethereum.enable();\n          // Accounts now exposed\n          resolve(web3);\n        } catch (error) {\n          reject(error);\n        }\n      }\n      // Legacy dapp browsers...\n      else if (window.web3) {\n        // Use Mist/MetaMask's provider.\n        const web3 = window.web3;\n        console.log(\"Injected web3 detected.\");\n        resolve(web3);\n      }\n      // Fallback to localhost; use dev console port by default...\n      else {\n        const provider = new Web3.providers.HttpProvider(\n          \"http://127.0.0.1:8545\"\n        );\n        const web3 = new Web3(provider);\n        console.log(\"No web3 instance injected, using Local web3.\");\n        resolve(web3);\n      }\n    });\n  });\n\nexport default getWeb3;","import React from 'react';\n\n\nexport const Web3WalletHelper = () => {\n    return (\n        <>请先下载metamask</>\n    )\n}","import React from 'react';\nimport getWeb3 from '../utils/getWeb3';\nimport { Web3WalletHelper } from '../components/helper/Web3WalletHelper';\n\nconst Web3Context = React.createContext(undefined);\n\n\nexport const Web3Provider = ({ children }) => {\n    const [web3, setweb3] = React.useState(undefined);\n    React.useEffect(() => {\n        getWeb3().then((web3) => setweb3(web3));\n    }, [])\n    return (\n        <>\n            <Web3Context.Provider value={web3}>\n                {web3 ?\n                    children\n                    :\n                    <Web3WalletHelper />\n                }\n            </Web3Context.Provider>\n        </>\n    )\n}\n\nexport const useWeb3 = () => {\n    return React.useContext(Web3Context);\n}","import React from 'react';\n\n\n\nexport const BSCMainNetRPCHelper = () => {\n    return (\n        <>\n            <h1>如何在Metamask中添加BSC主网RPC？</h1>\n        </>\n    )\n}","import React from 'react';\nimport { useWeb3 } from './Web3';\nimport NationContract from '../contracts/Nation.json';\nimport { BSCMainNetRPCHelper } from '../components/helper/BscRPCHelper';\n\nconst NationContractContext = React.createContext(undefined);\n\n\nexport const NationContractProvider = ({ children }) => {\n\n    const web3 = useWeb3();\n\n    const [instance, setinstance] = React.useState(undefined);\n    const [isBsc, setisBsc] = React.useState(false);\n    React.useEffect(() => {\n        async function createInstance() {\n            // Get the contract instance.\n            const networkId = await web3.eth.net.getId();\n            setisBsc(networkId === 97 || networkId === 56 || networkId === 1337);\n\n            const deployedNetwork = NationContract.networks[networkId];\n            const instance = new web3.eth.Contract(\n                NationContract.abi,\n                deployedNetwork && deployedNetwork.address,\n            );\n            setinstance(instance)\n        }\n\n        createInstance()\n    }, [web3])\n\n\n    return (\n        <NationContractContext.Provider value={instance}>\n            {\n                isBsc\n                    ?\n                    children\n                    :\n                    <BSCMainNetRPCHelper />\n            }\n        </NationContractContext.Provider>\n    )\n}\n\nexport const useNationContract = () => {\n    return React.useContext(NationContractContext);\n}","import React from 'react';\nimport { useWeb3 } from './Web3';\n\nconst AccountContext = React.createContext(undefined);\n\n\nexport const AccountProvider = ({ children }) => {\n    const web3 = useWeb3();\n    const [account, setaccount] = React.useState(undefined);\n\n    React.useEffect(() => {\n        async function initAccount() {\n            if (web3) {\n                const accounts = await web3.eth.getAccounts();\n                if (accounts.length > 0) {\n                    setaccount(accounts[0]);\n                }\n            }\n        }\n\n\n        initAccount();\n    }, [web3])\n\n    return (\n        <AccountContext.Provider value={account}>\n            {children}\n        </AccountContext.Provider>\n    )\n}\n\nexport const useAccount = () => {\n    return React.useContext(AccountContext);\n}","import React from 'react';\n\nconst MetadataContext = React.createContext(undefined);\n\n\nexport const MetadataProvider = ({ children }) => {\n    const [md, setmd] = React.useState(undefined);\n\n    React.useEffect(() => {\n        fetch('Nation-Origins-α.json')\n            .then(response => {\n                response.json().then(data => {\n                    setmd(data)\n                })\n            })\n    }, [])\n\n    return (\n        <MetadataContext.Provider value={md}>\n            {children}\n        </MetadataContext.Provider>\n    )\n}\n\nexport const useMetadata = () => {\n    return React.useContext(MetadataContext);\n}","export default __webpack_public_path__ + \"static/media/1.36e0cbe5.gif\";","import React from 'react';\nimport { useNationContract } from '../providers/NationContract';\nimport './Card.css';\nimport special from '../1.gif';\n\nconst SPECIAL_ATTRIBUTE = {\n  '无政府主义': 1,\n  '脑机': 1,\n  '飞碟残骸': 1,\n  '幸运': 1,\n  '比特币': 1,\n  '太空旅行': 1,\n  '熔岩地貌': 1,\n  '风蚀地貌': 1,\n  '冰川地貌': 1,\n};\n\nfunction isSpecialCard(item) {\n  return item.attributes.some((attr) => {\n    return SPECIAL_ATTRIBUTE[attr.value] > 0\n  })\n}\n\nexport const Card = ({ item }) => {\n\n  const isSpecial = React.useMemo(() => {\n    return isSpecialCard(item)\n  }, [item])\n\n  // React.useEffect(() => {\n\n  //   async function getToken() {\n  //     if (!contract) {\n  //       console.log('contract not inited');\n  //       return\n  //     }\n\n  //     const res = await contract.methods.tokenURI(tokenId).call();\n\n  //     const data = Buffer.from(res.replace('data:application/json;base64,', ''), 'base64').toString();\n  //     setitem(JSON.parse(data));\n  //   }\n\n  //   getToken()\n  // }, [contract, tokenId])\n\n\n  return (\n    <>\n      {\n        item &&\n\n        <div className=\"card\">\n          <img src={item.image} alt={item.name} />\n          <div className=\"card-meta\">\n            <h2>{item.name}</h2>\n            <p>{item.description}</p>\n            \n          </div>\n          {isSpecial && <img className=\"special\" src={special} alt=\"special\" />}\n        </div>\n      }\n\n    </>\n  )\n}","import React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { Card } from '../Card';\n\nimport './List.css';\n\nexport const List = ({ allItems, pageSize = 20 }) => {\n    const [items, setitems] = React.useState([]);\n    const [hasMore, sethasMore] = React.useState(true);\n\n    React.useEffect(() => {\n        setitems(allItems.slice(0, pageSize));\n        sethasMore(allItems.length > pageSize);\n    }, [allItems, pageSize])\n\n    const fetchMoreData = () => {\n        if (items.length >= allItems.length) {\n            sethasMore(false);\n            return\n        }\n\n        let append = [];\n        for (let i = items.length; i < allItems.length && i < items.length + pageSize; i++) {\n            append.push(allItems[i]);\n        }\n\n        setitems([...items, ...append])\n    }\n\n    return (\n        <>\n            <InfiniteScroll\n                dataLength={items.length}\n                next={fetchMoreData}\n                hasMore={hasMore}\n                loader={<h4>Loading...</h4>}\n                endMessage={\n                    <p style={{ textAlign: \"center\" }}>\n                        <b>哎呀~全部都在这里了</b>\n                    </p>\n                }\n            >\n                <div className=\"card-box\">\n                    {items.map((item, index) => <Card key={index} item={item} />)}\n                </div>\n            </InfiniteScroll>\n        </>\n    )\n}","import React from 'react';\nimport { useAccount } from '../providers/AccountProvider';\nimport { useMetadata } from '../providers/MetadataProvider';\nimport { useNationContract } from '../providers/NationContract';\nimport { List } from '../components/List/List';\n\nexport const Profile = () => {\n    const account = useAccount();\n    const nationContract = useNationContract();\n    const md = useMetadata();\n    const [ownedItems, setownedItems] = React.useState([]);\n\n\n    React.useEffect(() => {\n\n        async function fetchOwned() {\n            let count = await nationContract.methods.balanceOf(account).call();\n            let idx = [];\n            for (let i = 0; i < count; i++) {\n                idx.push(i);\n            }\n\n            let tokenIds = await Promise.all(\n                idx.map(i => {\n                    return nationContract.methods.tokenOfOwnerByIndex(account, i).call()\n                })\n            );\n\n\n            let items = tokenIds.map(tokenId => {\n                return md.items[tokenId - 1]\n            });\n\n            setownedItems(items)\n        }\n\n        if (!account || !nationContract || !md) {\n            return\n        }\n\n\n        fetchOwned()\n\n    }, [account, nationContract, md])\n\n    return (\n        <>\n            <h2>My Owned</h2>\n            <List allItems={ownedItems} />\n        </>\n    )\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name, attrName, theme) {\n  return {\n    fontWeight:\n      attrName.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport const AttributeGroupFilter = ({ groupName, attributes, onChange }) => {\n  const theme = useTheme();\n  const [attrName, setattrName] = React.useState([]);\n\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    const attrs = typeof value === 'string' ? value.split(',') : value;\n    onChange && onChange({ group: groupName, attrs })\n    setattrName(attrs);\n  };\n\n  return (\n    <div>\n      <FormControl sx={{ m: 1, width: 300 }}>\n        <InputLabel id=\"demo-multiple-chip-label\">{groupName}</InputLabel>\n        <Select\n          labelId=\"demo-multiple-chip-label\"\n          id=\"demo-multiple-chip\"\n          multiple\n          value={attrName}\n          onChange={handleChange}\n          input={<OutlinedInput id=\"select-multiple-chip\" label=\"参数\" />}\n          renderValue={(selected) => (\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n              {selected.map((value) => (\n                <Chip key={value} label={value} />\n              ))}\n            </Box>\n          )}\n          MenuProps={MenuProps}\n        >\n          {attributes.map((attr) => (\n            <MenuItem\n              key={attr.value}\n              value={attr.value}\n              style={getStyles(attr.value, attrName, theme)}\n            >\n              {`${attr.value} - 稀有度${(attr.rarity * 100).toFixed(2)}%`}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </div>\n  );\n}","import React from 'react';\nimport { List } from '../components/List/List';\nimport { useMetadata } from '../providers/MetadataProvider';\nimport { AttributeGroupFilter } from '../components/Filter/Filter';\n\nimport './showroom.css';\n\nfunction attributeMatched(item, filters) {\n    \n    for (const group of Object.keys(filters)) {\n        for (const value of filters[group]) {\n            if (!item.attrsMap[value]) { return false }\n        }\n    }\n    return true\n}\n\nexport const ShowRoom = () => {\n\n    const collection = useMetadata();\n    const [filters, setfilters] = React.useState({});\n    const [items, setitems] = React.useState([]);\n\n    const allItems = React.useMemo(() => {\n        if (!collection) { return [] }\n        return collection.items.map(item => {\n            let m = {};\n            item.attributes.forEach(attr => m[attr.value] = 1);\n            item.attrsMap = m;\n            return item\n        })\n    }, [collection]);\n\n    React.useEffect(() => {\n        if (!collection) { return [] }\n        setitems(allItems);\n    }, [collection, allItems])\n\n    const attrGroups = React.useMemo(() => {\n        if (!collection) {\n            return\n        }\n\n        return Object.keys(collection.attributes).filter(key => key !== '历史长度').map(key => {\n            const group = collection.attributes[key];\n            return {\n                name: key,\n                attributes: Object.keys(group).map(key => {\n                    return {\n                        value: key,\n                        count: group[key],\n                        rarity: group[key] / collection.items.length\n                    }\n                }),\n            }\n        })\n    }, [collection])\n\n    const onFilterChange = React.useCallback(({ group, attrs }) => {\n        filters[group] = attrs;\n        setfilters(filters)\n        setitems(allItems.filter(item => attributeMatched(item, filters)));\n    }, [filters, allItems])\n\n\n    return (\n        <>{\n            collection ?\n                <>\n                    <h2>{collection.name}</h2>\n                    <div className=\"items-box\">\n                        <div className=\"items-filter-box\">\n                            {\n                                attrGroups.map(group => <AttributeGroupFilter\n                                    key={group.name}\n                                    groupName={group.name}\n                                    attributes={group.attributes.sort((a, b) => a.rarity - b.rarity)}\n                                    onChange={onFilterChange} />)\n                            }\n                        </div>\n                        <List className=\"items-box\" allItems={items} />\n                    </div>\n                </>\n                : <p>加载中</p>\n\n        }\n\n        </>\n    )\n}","import React from 'react';\nimport { Web3Provider } from './providers/Web3';\nimport { NationContractProvider } from './providers/NationContract';\nimport { AccountProvider } from './providers/AccountProvider';\nimport { MetadataProvider } from './providers/MetadataProvider';\nimport { Profile } from './views/profile';\nimport { ShowRoom } from './views/showroom';\nimport './App.css';\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MetadataProvider>\n        <Web3Provider>\n          <AccountProvider>\n\n            <NationContractProvider>\n\n              <Profile />\n\n            </NationContractProvider>\n\n\n          </AccountProvider>\n        </Web3Provider>\n        <ShowRoom />\n      </MetadataProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}