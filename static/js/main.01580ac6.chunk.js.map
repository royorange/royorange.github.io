{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Providers","React","lazy","lodingText","n","Loading","useState","setn","useEffect","interval","setInterval","clearInterval","className","repeat","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAIMA,EAAYC,IAAMC,MAAK,kBAAM,uDAGnC,SAASC,EAAWC,GAElB,OAAIA,EAAI,GACC,sBAED,GAAN,OAAUA,EADDA,EAAI,IACb,eAEA,gBAIJ,IAAMC,EAAU,WACd,MAAkBJ,IAAMK,SAAS,GAAjC,mBAAOF,EAAP,KAAUG,EAAV,KAUA,OARAN,IAAMO,WAAU,WACd,IAAMC,EAAWC,aAAY,WAC3BH,EAAKH,EAAI,KACR,KACH,OAAO,kBAAMO,cAAcF,MAC1B,CAACL,IAIF,sBAAKQ,UAAU,UAAf,UACE,mDAAO,IAAIC,OAAOT,EAAI,MACtB,4BAAID,EAAWC,SAeNU,MAVf,WACE,OACE,qBAAKF,UAAU,MAAf,SACE,cAAC,WAAD,CAAUG,SAAU,cAAC,EAAD,IAApB,SACE,cAACf,EAAD,SC7BOgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.01580ac6.chunk.js","sourcesContent":["import React, { Suspense } from 'react';\nimport './App.css';\n\n\nconst Providers = React.lazy(() => import('./Providers'));\n\n\nfunction lodingText(n) {\n\n  if (n < 20) {\n    return \"A FEW MONENTS LATER\"\n  } else if (n < 100) {\n    return `${n} HOURS LATER`\n  } else {\n    return `${n} YEARS LATER`\n  }\n}\n\nconst Loading = () => {\n  const [n, setn] = React.useState(1);\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setn(n + 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [n])\n\n\n  return (\n    <div className=\"loading\">\n      <p>加载中{'.'.repeat(n % 4)}</p>\n      <p>{lodingText(n)}</p>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Suspense fallback={<Loading />}>\n        <Providers />\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}